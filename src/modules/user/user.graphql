scalar DateTime

type User {
    id: ID!
    username: String!
    email: String!
    password: String!
    createdAt: DateTime!
    updatedAt: DateTime!
    transactions: [Transaction!]
    portfolios: [Portfolio!]
}

input CreateUserInput {
    username: String!
    email: String!
    password: String!
}

input UpdateUserInput {
    id: ID!
    username: String
    email: String
    password: String
}

type Query {
    getUsers: [User!]!
    getUserById(id: ID!): User
    getUserByEmail(email: String!): User
}

type Mutation {
    createUser(createUserInput: CreateUserInput!): User!
    updateUser(updateUserInput: UpdateUserInput!): User!
    removeUser(id: ID!): User
}
